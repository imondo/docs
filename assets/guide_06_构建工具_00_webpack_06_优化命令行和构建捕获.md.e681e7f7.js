import{_ as s,o as a,c as n,O as l}from"./chunks/framework.7fa419f1.js";const C=JSON.parse('{"title":"优化命令行和构建捕获","description":"","frontmatter":{},"headers":[],"relativePath":"guide/06_构建工具/00_webpack/06_优化命令行和构建捕获.md","filePath":"guide/06_构建工具/00_webpack/06_优化命令行和构建捕获.md","lastUpdated":1686534760000}'),e={name:"guide/06_构建工具/00_webpack/06_优化命令行和构建捕获.md"},o=l(`<h1 id="优化命令行和构建捕获" tabindex="-1">优化命令行和构建捕获 <a class="header-anchor" href="#优化命令行和构建捕获" aria-label="Permalink to &quot;优化命令行和构建捕获&quot;">​</a></h1><h2 id="统计信息-stats" tabindex="-1">统计信息 stats <a class="header-anchor" href="#统计信息-stats" aria-label="Permalink to &quot;统计信息 stats&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Preset</th><th style="text-align:center;">Alternative</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">errors-only</td><td style="text-align:center;">none</td><td style="text-align:center;">只在发生错误时输出</td></tr><tr><td style="text-align:left;">minimal</td><td style="text-align:center;">none</td><td style="text-align:center;">只在发生错误或有新的编译时输出</td></tr><tr><td style="text-align:left;">none</td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">没有输出</td></tr><tr><td style="text-align:left;">normal</td><td style="text-align:center;"><code>true</code></td><td style="text-align:center;">标准输出</td></tr><tr><td style="text-align:left;">verbose</td><td style="text-align:center;">none</td><td style="text-align:center;">全部输出</td></tr></tbody></table><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    devServer: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">stats</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">errors-only</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="如何优化" tabindex="-1">如何优化 <a class="header-anchor" href="#如何优化" aria-label="Permalink to &quot;如何优化&quot;">​</a></h2><ul><li>friendly-errors-webpack-plugin <ul><li>success 构建成功</li><li>warning 构建警告</li><li>error 构建报错</li></ul></li><li>stats 设置成 errors-only</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FriendlyErrorsWebpackPlugin</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">   ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">devServer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F07178;">stats</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">errors-only</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="构建异常和中断处理" tabindex="-1">构建异常和中断处理 <a class="header-anchor" href="#构建异常和中断处理" aria-label="Permalink to &quot;构建异常和中断处理&quot;">​</a></h2><p>webpack4 之前版本构建失败不会抛出错误码</p><p>Node.js 中的 process.exit 规范</p><ul><li>0 表示成功完成，回调函数中，err 为 null</li><li>非 0 表示执行失败，回调函数中，err 不为 null，err.code 就是传给 exit 的数字</li></ul><h3 id="如何主动捕获" tabindex="-1">如何主动捕获 <a class="header-anchor" href="#如何主动捕获" aria-label="Permalink to &quot;如何主动捕获&quot;">​</a></h3><ul><li>compiler 在每次构建结束后触发 done 这个 hook</li><li>process.exit 主动处理构建报错</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="color:#FFCB6B;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">hooks</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">done</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tap</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">done</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">stats</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">stats</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">compilation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">errors</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stats</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">compilation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">errors</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">argv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">--watch</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">build error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exit</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span></code></pre></div>`,14),p=[o];function t(r,c,y,D,F,i){return a(),n("div",null,p)}const A=s(e,[["render",t]]);export{C as __pageData,A as default};
