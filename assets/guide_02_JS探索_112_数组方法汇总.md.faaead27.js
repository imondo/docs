import{_ as e,c as d,o as c,a as o}from"./app.11ca58d6.js";const p=JSON.parse('{"title":"数组方法汇总","description":"","frontmatter":{},"headers":[],"relativePath":"guide/02_JS探索/112_数组方法汇总.md","lastUpdated":1672379633000}'),i={name:"guide/02_JS探索/112_数组方法汇总.md"},a=o('<h1 id="数组方法汇总" tabindex="-1">数组方法汇总 <a class="header-anchor" href="#数组方法汇总" aria-hidden="true">#</a></h1><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/531a63e3d02e418b82b82c545e0f328d~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h2 id="添加删除元素" tabindex="-1">添加删除元素 <a class="header-anchor" href="#添加删除元素" aria-hidden="true">#</a></h2><ul><li><code>push(...items)</code> 向尾端添加元素</li><li><code>pop()</code> 从尾端提取一个元素</li><li><code>shift()</code> 从首端添加元素</li><li><code>unshift(...items)</code> 向首端添加元素</li><li><code>splice(pos, deleteCount, ...items)</code> 从 <code>pos</code> 开始删除 <code>deleteCount</code> 个元素，并插入 <code>items</code> 元素</li><li><code>slice(start, end)</code> 创建一个新数组，并将从位置 <code>start</code> 到位置 <code>end</code> 的元素复制进去</li><li><code>concat(...items)</code> 返回一个新数组，合并 <code>items</code> 数组</li></ul><h2 id="搜索元素" tabindex="-1">搜索元素 <a class="header-anchor" href="#搜索元素" aria-hidden="true">#</a></h2><ul><li><code>indexOf/lastIndexOf(item, pos)</code> 从位置 <code>pos</code> 开始搜索 <code>item</code>，搜索到则返回该项的索引，否则返回 <code>-1</code></li><li><code>includes(val)</code> 如果数组有 <code>val</code> ，返回 <code>true</code> ，否则返回 <code>flase</code></li><li><code>find/filter(func)</code> 通过 <code>func</code> 函数过滤元素，返回条件函数成立的第一个值/所有值</li><li><code>findIndex</code> 和 <code>find</code> 类似，不过其返回的是元素索引</li></ul><h2 id="遍历元素" tabindex="-1">遍历元素 <a class="header-anchor" href="#遍历元素" aria-hidden="true">#</a></h2><p><code>forEach(func)</code> 对每个元素都调用 <code>func</code> ，不返回任何内容</p><h2 id="转换数组" tabindex="-1">转换数组 <a class="header-anchor" href="#转换数组" aria-hidden="true">#</a></h2><ul><li><code>map(func)</code> 根据对每个元素调用 <code>func</code> 的结果创建一个新数组</li><li><code>sort(func)</code> 对数组进行原位排序，然后返回它</li><li><code>reverse()</code> 原位反转数组，然后返回它</li><li><code>split/join</code> 将字符串转换为数组并返回</li><li><code>reduce(func, initial)</code> 通过对每个元素调用 <code>func</code> 计算数组上的单个值，并在调用之间传递中间结果</li></ul><h2 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-hidden="true">#</a></h2><ul><li><code>Array.isArray(arr)</code> 检查 <code>arr</code> 是否是一个数组</li></ul><p><strong>注意：</strong><code>sort</code>，<code>reverse</code>，<code>splice</code> 方法修改的数组本身。</p>',13),t=[a];function l(r,s,n,h,u,_){return c(),d("div",null,t)}const m=e(i,[["render",l]]);export{p as __pageData,m as default};
