import{_ as s,c as a,o as n,a as l}from"./app.7fa96445.js";const d=JSON.parse('{"title":"数据类型与变量","description":"","frontmatter":{},"headers":[],"relativePath":"series/03_Swift/01_数据类型与变量.md","lastUpdated":1674013329000}'),p={name:"series/03_Swift/01_数据类型与变量.md"},o=l(`<h1 id="数据类型与变量" tabindex="-1">数据类型与变量 <a class="header-anchor" href="#数据类型与变量" aria-hidden="true">#</a></h1><p>声明变量时可指定它的数据类型。</p><ul><li><p>Int：整数类型</p></li><li><p>UInt：无符号整型，一般不推荐</p></li><li><p>浮点数：浮点类型比整数类型表示的范围更大，可以存储比Int类型更大或者更小的数字</p><ul><li><p>Double：表示 64 位浮点数。当你需要存储很大或者很高精度的浮点数时请使用此类型</p></li><li><p>Fload：表示 32 位浮点数。精度要求不高的话可以使用此类型</p></li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>Double</code> 精确度很高，至少有 15 位数字，而 Float 最少只有 6 位数字。选择哪个类型取决于你的代码需要处理的值的范围</p></div><ul><li>Bool</li></ul><p>布尔常量：<code>true</code> 和 <code>false</code></p><ul><li>String</li></ul><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">imondo.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li>Character</li></ul><p>字符指单个字母</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">C</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li>Optional</li></ul><p>可选类型来处理值可能缺失的情况。可选类型表示有值或没有值。</p><p>定义后缀 <code>?</code> 作为命名类型 <code>Optional</code> 的简写，这两种写法是相等的：</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> num: </span><span style="color:#FFCB6B;">Int</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> num1: </span><span style="color:#FFCB6B;">Optional</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Int</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>注意，在类型和 <code>?</code> 之间没有空格</p></div><p><code>Optional</code> 是一个含有两种情况的枚举，<code>None</code> 和 <code>Some(T)</code>，用来表示可能有或可能没有值。</p><p>任何类型都可以明确声明为（或者隐式转换）可选类型。当声明一个可选类型的时候，要确保用括号给 <code>?</code> 操作符一个合适的范围。例如，声明可选整数数组，应该写成 <code>(Int[])?</code> 写成 <code>Int[]?</code> 会报错。</p><p>当你声明一个可选变量或者可选属性的时候没有提供初始值，它的值会默认为 <code>nil</code>。</p><p>如果一个可选类型的实例包含一个值，你可以用后缀操作符 <code>!</code> 来访问这个值：</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span></span>
<span class="line"><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 32</span></span>
<span class="line"></span></code></pre></div><p><strong>请注意</strong>：如果使用 <code>!</code> 访问值为 <code>nil</code> 时，会有运行时错误。</p><p>如果值为nil，任何操作都不会执行，也不会有运行报错。</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Cocoa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> str:</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">字符串为 nil</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行结果</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">字符串为 </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"></span></code></pre></div><ul><li>强制解析：加 <code>!</code> 强制解析</li></ul><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Cocoa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> str:</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">?</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, Swift!</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 强制解析</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">str 值为 nil</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>自动解析</li></ul><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Cocoa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> str:</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 自动解析</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, Swift!</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">str 值为 nil</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>可选绑定：可选绑定可以用在 <code>if</code> 和 <code>while</code> 语句中来对可选类型的值进行判断并把值赋给一个常量或者变量</li></ul><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Cocoa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> str:</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">?</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, Swift!</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> str1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你的字符串值为 - </span><span style="color:#89DDFF;">\\(</span><span style="color:#A6ACCD;">str1</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你的字符串没有值</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="数值范围" tabindex="-1">数值范围 <a class="header-anchor" href="#数值范围" aria-hidden="true">#</a></h2><table><thead><tr><th>类型</th><th>大小（字节）</th><th>区间值</th></tr></thead><tbody><tr><td>Int8</td><td>1 字节</td><td>-128 到 127</td></tr><tr><td>UInt8</td><td>1 字节</td><td>0 到 255</td></tr><tr><td>Int32</td><td>4 字节</td><td>-2147483648 到 2147483647</td></tr><tr><td>UInt3</td><td>24 字节</td><td>0 到 4294967295</td></tr><tr><td>Int64</td><td>8 字节</td><td>-9223372036854775808 到 9223372036854775807</td></tr><tr><td>UInt6</td><td>48 字节</td><td>0 到 18446744073709551615</td></tr><tr><td>Float</td><td>4 字节</td><td>1.2E-38 到 3.4E+38 (~6 digits)</td></tr><tr><td>Double</td><td>8 字节</td><td>2.3E-308 到 1.7E+308 (~15 digits)</td></tr></tbody></table><h2 id="类型别名" tabindex="-1">类型别名 <a class="header-anchor" href="#类型别名" aria-hidden="true">#</a></h2><p>类型别名对当前的类型定义了另一个名字，类型别名通过使用 <code>typealias</code> 关键字来定义。</p><p>语法格式如下：</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">typealias</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">newname</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> type</span></span>
<span class="line"></span></code></pre></div><p>例如以下定义了 Int 的类型别名为 Feet：</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">typealias</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Feet</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Int</span></span>
<span class="line"></span></code></pre></div><p>现在我们可以通过别名来定义变量</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Cocoa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typealias</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Feet</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Int</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> num: Feet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>输出结果仍是：</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">100</span></span>
<span class="line"></span></code></pre></div><h2 id="类型安全" tabindex="-1">类型安全 <a class="header-anchor" href="#类型安全" aria-hidden="true">#</a></h2><p>Swift 是一个类型安全的语言。由于是类型安全的，所以在编译时会要进行类型检查，并把不匹配的类型标记为错误。</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Cocoa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> varA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span></span>
<span class="line"><span style="color:#A6ACCD;">varA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">imondo.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">varA</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>编译时，会报错。</p><h2 id="类型推断" tabindex="-1">类型推断 <a class="header-anchor" href="#类型推断" aria-hidden="true">#</a></h2><p>当你要处理不同类型的值时，类型检查可以帮你避免错误。然而，这并不是说你每次声明常量和变量的时候都需要显式指定类型</p><p>如果你没有显式指定类型，Swift 会使用类型推断（type inference）来选择合适的类型。</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 会推测为 Int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> PI </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.14159</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 会被推测为 Double 类型</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>当推断浮点数的类型时，<code>Swift</code> 总是会选择 <code>Double</code> 而不是 <code>Float</code></p></div><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-hidden="true">#</a></h2><p>变量声明</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 存储型变量或存储型变量属性</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">imondo.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 常量</span></span>
<span class="line"><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"></span></code></pre></div><ul><li><p>变量名可以由字母，数字和下划线组成。</p></li><li><p>变量名需要以字母或下划线开始。</p></li><li><p>Swift 是一个区分大小写的语言，所以字母大写与小写是不一样的。</p></li></ul><p>变量和常量可以使用 <code>print</code> 函数来输出。在字符串中可以使用括号与反斜线来插入变量</p><p>如：</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Cocoa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mondo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> site </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://imondo.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">\\(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">的首页为：</span><span style="color:#89DDFF;">\\(</span><span style="color:#A6ACCD;">site</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>执行结果：</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Mondo的首页为 https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//imondo.cn</span></span>
<span class="line"></span></code></pre></div><h2 id="字面量" tabindex="-1">字面量 <a class="header-anchor" href="#字面量" aria-hidden="true">#</a></h2><p>字面量，就是指像特定的数字，字符串或者布尔值，能够直接了当地指出自己的类型并为变量进行赋值的值。</p><ul><li><p>整型</p></li><li><p>浮点型</p></li><li><p>字符串型</p></li><li><p>布尔型</p><ul><li><p><code>true</code> 表示真</p></li><li><p><code>false</code> 表示假</p></li><li><p><code>nil</code> 表示没有值</p></li></ul></li></ul>`,65),t=[o];function e(c,r,i,D,y,F){return n(),a("div",null,t)}const A=s(p,[["render",e]]);export{d as __pageData,A as default};
