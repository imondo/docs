import{_ as t,c as e,o as l,a}from"./app.62276965.js";const u=JSON.parse('{"title":"webpack 实现 SSR 打包","description":"","frontmatter":{},"headers":[],"relativePath":"guide/06_TOOLS/00_webpack/05_webpack实现SSR打包.md","lastUpdated":1670836097000}'),d={name:"guide/06_TOOLS/00_webpack/05_webpack实现SSR打包.md"},i=a('<h1 id="webpack-实现-ssr-打包" tabindex="-1">webpack 实现 SSR 打包 <a class="header-anchor" href="#webpack-实现-ssr-打包" aria-hidden="true">#</a></h1><h2 id="服务端渲染-ssr-是什么" tabindex="-1">服务端渲染（SSR）是什么 <a class="header-anchor" href="#服务端渲染-ssr-是什么" aria-hidden="true">#</a></h2><ul><li>渲染：HTML + CSS + JS + DATA =&gt; 渲染后的 HTML</li></ul><p>服务端</p><ul><li>所有模板等资源都存储在服务端</li><li>内网机器拉取数据更快（优势）</li><li>一个 HTML 返回所有数据</li></ul><table><thead><tr><th style="text-align:left;"></th><th style="text-align:center;">客户端渲染</th><th style="text-align:center;">服务端渲染</th></tr></thead><tbody><tr><td style="text-align:left;">请求</td><td style="text-align:center;">多个请求（HTML，数据等）</td><td style="text-align:center;">1个请求</td></tr><tr><td style="text-align:left;">加载过程</td><td style="text-align:center;">HTML &amp; 数据串行加载</td><td style="text-align:center;">1个请求返回 HTML &amp; 数据</td></tr><tr><td style="text-align:left;">渲染</td><td style="text-align:center;">前端渲染</td><td style="text-align:center;">服务端渲染</td></tr><tr><td style="text-align:left;">可交互</td><td style="text-align:center;">图片等静态资源加载完成，JS 逻辑执行完成可交互</td><td style="text-align:center;">两端一样</td></tr></tbody></table><p>优势</p><ul><li>减少白屏时间</li><li>对于 SEO 友好</li></ul><h2 id="打包存在的问题" tabindex="-1">打包存在的问题 <a class="header-anchor" href="#打包存在的问题" aria-hidden="true">#</a></h2><ul><li>浏览器的全局变量（Node.js 中没有 window，document） <ul><li>组件适配：将不兼容的组件根据打包环境进行适配</li><li>请求适配：推荐使用 <code>axios</code></li></ul></li><li>样式问题（Node.js 无法解析 css） <ul><li>服务端打包通过 <code>ignore-loader</code> 忽略掉 <code>css</code> 的解析</li><li>将 <code>style-loader</code> 替换成 <code>isomorphic-style-loader</code></li><li>使用打包出来的浏览器端 html 为模板</li><li>设置占位符，动态插入组件</li></ul></li></ul>',10),r=[i];function s(c,n,o,_,h,p){return l(),e("div",null,r)}const x=t(d,[["render",s]]);export{u as __pageData,x as default};
