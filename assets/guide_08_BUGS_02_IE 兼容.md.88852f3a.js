import{_ as s,c as a,o as e,a as n}from"./app.3f44cf72.js";const _=JSON.parse('{"title":"IE 兼容","description":"","frontmatter":{},"headers":[],"relativePath":"guide/08_BUGS/02_IE 兼容.md","lastUpdated":1676614967000}'),l={name:"guide/08_BUGS/02_IE 兼容.md"},o=n(`<h1 id="ie-兼容" tabindex="-1">IE 兼容 <a class="header-anchor" href="#ie-兼容" aria-hidden="true">#</a></h1><h2 id="不兼容-promise" tabindex="-1">不兼容 Promise <a class="header-anchor" href="#不兼容-promise" aria-hidden="true">#</a></h2><p>兼容性问题主要来源于 IE 浏览器可能对如下特性不支持：</p><p>新的 <code>JavaScript</code> 语法特性 新的 <code>JavaScript</code> <code>API</code> 或 <code>DOM</code> <code>API</code> 新的 <code>CSS</code> 特性</p><p>使用 <a href="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.10.4/polyfill.min.js" target="_blank" rel="noreferrer">Polyfill</a>，抚平不同浏览器之间对 js 实现的差异。</p><p>在页面引入 <code>polyfill.min.js</code> 脚本，位置需要在<strong>第一个加载</strong>。</p><h2 id="flex-布局" tabindex="-1">flex 布局 <a class="header-anchor" href="#flex-布局" aria-hidden="true">#</a></h2><ul><li>在 IE11 下 <code>flex: 1</code> 解析为 <code>1 1 0</code>, 而不是其他浏览器的 <code>1 1 auto</code></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content-wrapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-grow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* flex:1 改变成 flex-grow: 1 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>或者指定具体值</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content-wrapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><code>min-height</code> 属性在 <code>flex</code> 容器上无效</li></ul><p>在当前 <code>flex</code> 容器上再添加一个 <code>flex</code> 容器</p>`,13),p=[o];function c(t,r,i,d,C,y){return e(),a("div",null,p)}const F=s(l,[["render",c]]);export{_ as __pageData,F as default};
