import{_ as e,c as t,o as d,a as o}from"./app.a57aac40.js";const r="/docs/imgs/vue.png",v=JSON.parse('{"title":"Vue 的生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"interview/02_Vue系列/01_Vue 的生命周期.md","lastUpdated":1675070703000}'),c={name:"interview/02_Vue系列/01_Vue 的生命周期.md"},l=o('<h1 id="vue-的生命周期" tabindex="-1">Vue 的生命周期 <a class="header-anchor" href="#vue-的生命周期" aria-hidden="true">#</a></h1><p>Vue 生命周期总共可以分为 <code>8</code> 个阶段：创建(<code>create</code>)前后，载入(<code>mount</code>)前后，更新(<code>update</code>)前后，销毁(<code>destroy</code>)前后，以及一些特殊场景的生命周期</p><table><thead><tr><th>生命周期</th><th>描述</th></tr></thead><tbody><tr><td>beforeCreate</td><td>组件实例创建前</td></tr><tr><td>created</td><td>组件实例已完全创建</td></tr><tr><td>beforeMount</td><td>组件挂载前</td></tr><tr><td>mounted</td><td>组件挂载到实例后</td></tr><tr><td>beforeUpdate</td><td>组件数据发生变化，更新前</td></tr><tr><td>updated</td><td>组件数据更新后</td></tr><tr><td>beforeDestroy</td><td>组件实例销毁前</td></tr><tr><td>destroyed</td><td>组件实例销毁后</td></tr><tr><td>activated</td><td>keep-alive 缓存的组件激活时</td></tr><tr><td>deactivated</td><td>keep-alive 缓存的组件停用时调用</td></tr><tr><td>errorCaptured</td><td>捕获一个来自子孙组件的错误时被调用</td></tr></tbody></table><h2 id="生命周期流程" tabindex="-1">生命周期流程 <a class="header-anchor" href="#生命周期流程" aria-hidden="true">#</a></h2><p><img src="'+r+'" alt="vue"></p><p>分析</p><ul><li><p>beforeCreate -&gt; created 阶段：初始化 <code>vue</code> 实例，进行数据观测</p></li><li><p>created 阶段</p><ul><li><p>完成数据观测、属性、方法的运算，<code>watch</code>、<code>event</code> 事件回调的配置</p></li><li><p>可调用 methods 中的方法，访问和修改 <code>data</code> 数据</p></li><li><p><code>DOM</code> 暂未创建</p></li></ul></li><li><p>created -&gt; beforeMount 阶段</p><ul><li><p>判断是否存在 <code>el</code> 选项，若不存在则停止编译，直到调用 <code>vm.$mount(el)</code> 才会继续编译</p></li><li><p>优先级：<code>render</code> &gt; <code>template</code> &gt; <code>outerHTML</code></p></li><li><p><code>vm.el</code> 获取到的是挂载 <code>DOM</code> 的</p></li></ul></li><li><p>beforeMount 阶段：<code>vm.el</code> 完成 <code>DOM</code> 化，但并没有挂载在 <code>el</code> 选项上</p></li><li><p>beforeMount -&gt; mounted 阶段：<code>vm.el</code> 完成挂载，<code>vm.$el</code> 生成的 <code>DOM</code> 替换了 <code>el</code> 选项所对应的 <code>DOM</code></p></li><li><p>mounted 阶段：<code>vm.el</code> 已完成 <code>DOM</code> 的挂载与渲染，此刻打印 <code>vm.$el</code>，发现之前的挂载点及内容已被替换成新的 <code>DOM</code></p></li><li><p>beforeUpdate 阶段</p><ul><li><p>此时 <code>view</code> 还未更新</p></li><li><p>若在 <code>beforeUpdate</code> 中修改数据，不会再次触发更新方法</p></li></ul></li><li><p>updated 阶段</p><ul><li><p>完成 <code>view</code> 更新</p></li><li><p>若在 <code>updated</code> 中修改数据，会触发更新方法</p></li></ul></li><li><p>beforeDestroy 阶段</p><ul><li>实例被销毁前，还可以访问实例属性和方法</li></ul></li><li><p>destroyed 阶段</p><ul><li><p>完全销毁实例，解绑了所有指令和事件监听</p></li><li><p>不能清除 <code>DOM</code>，仅销毁实例</p></li></ul></li></ul><p>使用场景分析</p><table><thead><tr><th>生命周期</th><th>描述</th></tr></thead><tbody><tr><td>beforeCreate</td><td>执行时组件实例还未创建，通常用于插件开发中执行一些初始化任务</td></tr><tr><td>created</td><td>组件初始化完毕，各种数据可以使用，常用于异步数据获取</td></tr><tr><td>beforeMount</td><td>未执行渲染、更新，dom 未创建</td></tr><tr><td>mounted</td><td>初始化结束，dom已创建，可用于获取访问数据和dom元素</td></tr><tr><td>beforeUpdate</td><td>更新前，可用于获取更新前各种状态</td></tr><tr><td>updated</td><td>更新后，所有状态已是最新</td></tr><tr><td>beforeDestroy</td><td>销毁前，可用于一些定时器或订阅的取消</td></tr><tr><td>destroyed</td><td>组件已销毁，作用同上</td></tr></tbody></table><p><strong>参考</strong></p><p><a href="https://vue3js.cn/interview/vue/vue.html" target="_blank" rel="noreferrer">https://vue3js.cn/interview/vue/vue.html</a></p>',11),p=[l];function a(i,u,n,s,_,h){return d(),t("div",null,p)}const b=e(c,[["render",a]]);export{v as __pageData,b as default};
