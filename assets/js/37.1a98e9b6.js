(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{253:function(e,n,t){"use strict";t.r(n);var s=t(0),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"github项目实现自动化部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github项目实现自动化部署"}},[e._v("#")]),e._v(" Github项目实现自动化部署")]),e._v(" "),t("p",[e._v("当我们利用"),t("code",[e._v("github")]),e._v("来托管项目时，每次部署项目都要走同样的流程，敲击同样的命令行，尤其的我们的"),t("code",[e._v("node")]),e._v("项目更是无法忍受这种重复工作。")]),e._v(" "),t("p",[e._v("那到底有没有一种可以解放我们双手，当我们提交代码后，服务器自动执行我们已经制定好的命令行，答案是我们可以利用"),t("code",[e._v("Github")]),e._v("自有的"),t("code",[e._v("Webhooks")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"webhooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webhooks"}},[e._v("#")]),e._v(" Webhooks")]),e._v(" "),t("p",[t("code",[e._v("Webhooks")]),e._v("是来监测你在"),t("code",[e._v("github")]),e._v("上的各种事件，我们可以通过定制它来监测一个"),t("code",[e._v("push")]),e._v("事件，每当我们提交代码时"),t("code",[e._v("Webhooks")]),e._v("会被触发，这是我们可以通过配置一个"),t("code",[e._v("HOST POST")]),e._v("请求到你所需要的地址。")]),e._v(" "),t("h2",{attrs:{id:"如何配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何配置"}},[e._v("#")]),e._v(" 如何配置")]),e._v(" "),t("p",[e._v("找到你在"),t("code",[e._v("Github")]),e._v("上的项目地址上的"),t("code",[e._v("Setting")]),e._v("的"),t("code",[e._v("Webhooks")]),e._v("，如下图配置：")]),e._v(" "),t("img",{attrs:{src:"_img/deploy.png"}}),e._v(" "),t("h2",{attrs:{id:"项目配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目配置"}},[e._v("#")]),e._v(" 项目配置")]),e._v(" "),t("ul",[t("li",[e._v("编写执行"),t("code",[e._v("shell命令")])])]),e._v(" "),t("p",[e._v("在项目根目录下新建"),t("code",[e._v("deployed.sh")]),e._v("文件，输入你想在服务器上执行的命令行，如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd /front/docs/\n\ngit pull origin master\n\n")])])]),t("ul",[t("li",[e._v("编写执行脚本")])]),e._v(" "),t("p",[e._v("在项目根目录下新建"),t("code",[e._v("deployed.js")]),e._v("文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var http = require('http')\nvar spawn = require('child_process').spawn\nvar createHandler = require('github-webhook-handler')\nvar handler = createHandler({\n  path: '/pushCode',\n  secret: '12345678'\n})\nhttp.createServer(function (req, res) {\n  handler(req, res, function (err) {\n    res.statusCode = 404;\n    res.end('no such location')\n  })\n}).listen(3000)\n\nhandler.on('error', function (err) {\n  console.error('Error:', err.message)\n})\n\nhandler.on('push', function (event) {\n  console.log('Received a push event for %s to %s',\n    event.payload.repository.name,\n    event.payload.ref)\n  rumCommand('sh', ['./deployed.sh'], function (txt) {\n    console.log(txt)\n  })\n})\n\nfunction rumCommand(cmd, args, callback) {\n  var child = spawn(cmd, args)\n  var response = ''\n  child.stdout.on('data', function (buffer) {\n    response += buffer.toString()\n  })\n  child.stdout.on('end', function () {\n    callback(response)\n  })\n}\n\n")])])]),t("h2",{attrs:{id:"nginx配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置"}},[e._v("#")]),e._v(" nginx配置")]),e._v(" "),t("p",[e._v("执行脚本跑在了3000端口，我们服务器对应启用到 3000 端口")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream test {\n    server 127.0.0.1:3000;\n}\n\nserver {\n\n  location /pushCode {\n    proxy_pass http://test;\n    proxy_redirect off;\n  }\n\n}\n\n")])])]),t("h2",{attrs:{id:"部署项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署项目"}},[e._v("#")]),e._v(" 部署项目")]),e._v(" "),t("p",[e._v("首次部署到服务器时，仍然是需要我们手动执行命令"),t("code",[e._v("git pull")]),e._v("项目，当我们在服务器上"),t("code",[e._v("clone")]),e._v("下我们的项目后，在本地尝试修改下代码，然后再次提交，可看到后台的日志")]),e._v(" "),t("img",{attrs:{src:"_img/logs.png"}}),e._v(" "),t("p",[e._v("再次查看"),t("code",[e._v("Webhooks")])]),e._v(" "),t("img",{attrs:{src:"_img/hooks.png"}}),e._v(" "),t("p",[e._v("表示已经自动触发了接口，项目自动化部署成功。")]),e._v(" "),t("h2",{attrs:{id:"管理应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管理应用"}},[e._v("#")]),e._v(" 管理应用")]),e._v(" "),t("p",[e._v("在服务器上执行"),t("code",[e._v("node")]),e._v("命令后，当我们离开服务器后，实际上程序进程关闭了，所以我们利用"),t("a",{attrs:{href:"https://github.com/Unitech/pm2",target:"_blank",rel:"noopener noreferrer"}},[e._v("pm2"),t("OutboundLink")],1),e._v("来管理我们的"),t("code",[e._v("node")]),e._v("进程。")]),e._v(" "),t("p",[e._v("在项目根目录下新建"),t("code",[e._v("pm2.json")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[{\n  "name": "test",\n  "script": "deployed.js",\n  "env_dev": {\n    "NODE_ENV": "development"\n  },\n  "env_production": {\n    "NODE_ENV": "production"\n  }\n}]\n')])])]),t("p",[e._v("把所有的代码推送上服务器，进入服务器项目目录，执行")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 启动命令\npm2 start pm2.json\n\n// 查看是否启动\npm2 list\n\n// 查看日志\npm2 logs\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);