(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{237:function(e,a,n){"use strict";n.r(a);var t=n(0),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"webpack打包优化方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包优化方案"}},[e._v("#")]),e._v(" webpack打包优化方案")]),e._v(" "),n("p",[e._v("由于新建项目发版打包时间大概需要"),n("strong",[e._v("30分钟")]),e._v("，发版时"),n("strong",[e._v("严重")]),e._v("拖慢"),n("strong",[e._v("下班")]),e._v("时间，所以特意查看了相关文档来优化打包速度，争取早点下班，^_^。")]),e._v(" "),n("h2",{attrs:{id:"分析打包文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分析打包文件"}},[e._v("#")]),e._v(" 分析打包文件")]),e._v(" "),n("p",[e._v("要优化，先分析。我们先要知道到底是哪里拖慢我们的打包速度呢？")]),e._v(" "),n("h3",{attrs:{id:"打包后生成文件分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打包后生成文件分析"}},[e._v("#")]),e._v(" 打包后生成文件分析")]),e._v(" "),n("p",[e._v("可以利用"),n("code",[e._v("webpack-bundle-analyzer")]),e._v("插件来分析我们打包后生成的文件")]),e._v(" "),n("ul",[n("li",[e._v("安装")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i webpack-bundle-analyzer -D\n")])])]),n("ul",[n("li",[e._v("使用")])]),e._v(" "),n("p",[e._v("修改"),n("code",[e._v("webpack.prod.conf.js")]),e._v("文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n\n// 构建完成后，浏览器会自动打开localhost:8080\nwebpackConfig.plugins.push(\n  new BundleAnalyzerPlugin({\n    analyzerPort: 8080,\n    generateStatsFile: false\n  })\n)\n")])])]),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/6/16b2a7273e2e924b?w=1903&h=934&f=png&s=304816",alt:""}})]),e._v(" "),n("p",[e._v("通过图片可以看到打包后文件的具体信息")]),e._v(" "),n("h3",{attrs:{id:"打包进度条显示，可以查看到打包进度百分比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打包进度条显示，可以查看到打包进度百分比"}},[e._v("#")]),e._v(" 打包进度条显示，可以查看到打包进度百分比")]),e._v(" "),n("p",[n("code",[e._v("simple-progress-webpack-plugin")]),e._v("可以显示打包百分比")]),e._v(" "),n("ul",[n("li",[e._v("安装")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i simple-progress-webpack-plugin -D\n")])])]),n("ul",[n("li",[e._v("使用")])]),e._v(" "),n("p",[e._v("修改"),n("code",[e._v("webpack.prod.conf.js")]),e._v("文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const SimpleProgressWebpackPlugin = require( 'simple-progress-webpack-plugin' )\n...\n  plugins: [\n    new SimpleProgressWebpackPlugin()\n  ]\n...\n")])])]),n("p",[e._v("效果如下：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/6/16b2a72adce34fe9?w=734&h=206&f=png&s=9902",alt:""}})]),e._v(" "),n("h2",{attrs:{id:"资源与依赖包的控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#资源与依赖包的控制"}},[e._v("#")]),e._v(" 资源与依赖包的控制")]),e._v(" "),n("p",[e._v("通过上面进度可以看到，打包过程中，卡顿在压缩的地方过长，当项目越来越臃肿的时候，我们要需要对项目静态资源以及依赖包进行整理，")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("图片过大的可以压缩，这里推荐一个还不错的压缩"),n("a",{attrs:{href:"https://www.yasuotu.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("链接"),n("OutboundLink")],1)])]),e._v(" "),n("li",[n("p",[e._v("项目中没有使用的依赖可以删除，可以按需引用的依赖，按需引用")])])]),e._v(" "),n("p",[e._v("项目里面使用"),n("code",[e._v("ElementUI")]),e._v("和"),n("code",[e._v("Echarts")]),e._v("都是全部引用挂在"),n("code",[e._v("Vue.prototype")]),e._v("上，现都改为按需引用。")]),e._v(" "),n("h2",{attrs:{id:"减少文件搜索范围"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#减少文件搜索范围"}},[e._v("#")]),e._v(" 减少文件搜索范围")]),e._v(" "),n("ul",[n("li",[e._v("设置"),n("code",[e._v("resolve.alias")]),e._v("字段，避免打包时如果使用相对路径访问或着"),n("code",[e._v("import")]),e._v("文件时会层层去查找解析文件")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("resolve: {\n  alias: {\n    '@': resolve('src')\n  }\n}\n")])])]),n("ul",[n("li",[e._v("合理配置"),n("code",[e._v("extensions")]),e._v("扩展名")])]),e._v(" "),n("p",[n("code",[e._v("resolve.extensions")]),e._v("能够自动解析确定的扩展，但是如果"),n("code",[e._v("extensions")]),e._v("扩展名过多，会导致解析过程过多，所以我们要合理配置扩展名，不要过多配置扩展名，项目引用多的文件，扩展名放在前面，我司项目中多的是"),n("code",[e._v("vue")]),e._v("，"),n("code",[e._v("js")]),e._v("文件，可以只引用这两种。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("resolve: {\n  extensions: ['.vue', '.js']\n}\n")])])]),n("ul",[n("li",[n("code",[e._v("loader")]),e._v("预处理文件增加"),n("code",[e._v("include")]),e._v("匹配特定条件")])]),e._v(" "),n("p",[e._v("预处理各种文件时指定匹配目录后，"),n("code",[e._v("webpack")]),e._v("解析文件时就不会循环查找其他目录，加快解析速度。")]),e._v(" "),n("h2",{attrs:{id:"happypack多线程执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#happypack多线程执行"}},[e._v("#")]),e._v(" "),n("code",[e._v("happypack")]),e._v("多线程执行")]),e._v(" "),n("p",[n("code",[e._v("webpack")]),e._v("执行预处理文件时单线程的，我们可以使用"),n("a",{attrs:{href:"https://github.com/amireh/happypack",target:"_blank",rel:"noopener noreferrer"}},[e._v("happypack"),n("OutboundLink")],1),e._v("来多线程处理文件。")]),e._v(" "),n("ul",[n("li",[e._v("安装")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i happypack  -D\n")])])]),n("ul",[n("li",[e._v("使用")])]),e._v(" "),n("p",[e._v("修改"),n("code",[e._v("webpack.base.js")]),e._v("文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const happyThreadPool = HappyPack.ThreadPool({ size: os.cpus().length });\nmodule: {\n  rules: [\n    {\n      test: /\\.js$/,\n      loader: 'happypack/loader?id=babel', // 原始loader替换成`happypack/loader`\n      include: [resolve('src')]\n    }\n  ]\n},\nplugins: [\n  new HappyPack({\n    // id标识 需要处理的loader\n    id: 'babel',\n    // loader配置和原始配置一样\n    loaders: [\n      {\n        loader: 'babel-loader',\n        options: {\n          presets: ['es2015'],\n          cacheDirectory: true\n        }\n      }\n    ],\n    threadPool: happyThreadPool\n  })\n]\n")])])]),n("h2",{attrs:{id:"babel-plugin-dynamic-import-node异步加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-dynamic-import-node异步加载"}},[e._v("#")]),e._v(" "),n("code",[e._v("babel-plugin-dynamic-import-node")]),e._v("异步加载")]),e._v(" "),n("p",[n("code",[e._v("babel-plugin-dynamic-import-node")]),e._v("插件是使"),n("code",[e._v("import()")]),e._v(" 替换成 "),n("code",[e._v("require")]),e._v(" 编译")]),e._v(" "),n("ul",[n("li",[e._v("安装")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i babel-plugin-dynamic-import-node -D\n")])])]),n("ul",[n("li",[e._v("使用")])]),e._v(" "),n("p",[e._v("修改"),n("code",[e._v(".babelrc")]),e._v(" 文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('"env": {\n  "development": {\n    "plugins": ["dynamic-import-node"]\n  },\n  "production": {\n    "plugins": ["dynamic-import-node"]\n  }\n}\n')])])]),n("p",[n("strong",[e._v("注意")]),e._v("：使用插件"),n("code",[e._v("build")]),e._v("后没有"),n("code",[e._v("chunk files")]),e._v("文件。")]),e._v(" "),n("h2",{attrs:{id:"dllplugin分包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dllplugin分包"}},[e._v("#")]),e._v(" "),n("code",[e._v("DllPlugin")]),e._v("分包")]),e._v(" "),n("p",[e._v("通过"),n("code",[e._v("DllPlugin")]),e._v("插件分离出第三方包")]),e._v(" "),n("ul",[n("li",[e._v("新建"),n("code",[e._v("webpack.dll.conf.js")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const path = require('path');\nconst webpack = require('webpack');\nconst CleanWebpackPlugin = require(\"clean-webpack-plugin\");\n\nmodule.exports = {\n  entry: {\n    vendor: [\n      'vue',\n      'vue-router',\n      'vuex',\n      'axios',\n      'element-ui',\n      'echarts'\n    ]\n  },\n  output: {\n    filename: '[name]_dll_[hash:6].js', // 产生的文件名\n    path: path.resolve(__dirname, '../static/dll'),\n    library: '[name]_dll_[hash:6]'\n  },\n  plugins: [\n    new CleanWebpackPlugin({ \n      root: path.resolve(__dirname, '../static/dll'),\n      dry: false // 启用删除文件\n    }),\n    new webpack.DllPlugin({\n      name: '[name]_dll_[hash:6]',\n      path: path.resolve(__dirname, '../static/dll', '[name].dll.manifest.json')\n    })\n  ]\n};\n")])])]),n("ul",[n("li",[e._v("修改"),n("code",[e._v("webpack.prod.conf.js")])])]),e._v(" "),n("p",[e._v("使用"),n("code",[e._v("add-asset-html-webpack-plugin")]),e._v("动态添加"),n("code",[e._v("dll.js")]),e._v("到"),n("code",[e._v("html")]),e._v("。")]),e._v(" "),n("p",[n("strong",[e._v("需要注意")])]),e._v(" "),n("ol",[n("li",[n("p",[n("code",[e._v("add-asset-html-webpack-plugin")]),e._v("要在"),n("code",[e._v("HtmlWebpackPlugin")]),e._v("后引入；")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("html-webpack-plugin")]),e._v("依赖包版本"),n("code",[e._v("4.0.0-alpha")]),e._v("会出个问题，添加上去的路径会变成"),n("code",[e._v("undefined")]),e._v("需要是"),n("strong",[e._v("3.2.0")]),e._v("版本")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const AddAssetHtmlPlugin = require('add-asset-html-webpack-plugin');\n...\nplugins: [\n  // 插入dll json\n  new webpack.DllReferencePlugin({\n    context: path.join(__dirname),\n    manifest: require('../static/dll/vendor.dll.manifest.json')\n  }),\n  new HtmlWebpackPlugin(),\n  // 插入 dll js\n  new AddAssetHtmlPlugin([{ \n    publicPath: config.build.assetsPublicPath + 'static/dll/',  // 注入到html中的路径\n    outputPath: 'static/dll/', // 输出文件目录\n    filepath: resolve('static/dll/*.js'), // 文件路径\n    includeSourcemap: false,\n    typeOfAsset: \"js\"\n  }])\n]\n\n")])])]),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),n("p",[e._v("项目经过以上优化，打包从"),n("strong",[e._v("30")]),e._v("分钟，到"),n("strong",[e._v("2")]),e._v("分钟不到，整体还有优化空间，可以使用其他"),n("code",[e._v("cdn")]),e._v("等优化方式。")])])}),[],!1,null,null,null);a.default=s.exports}}]);