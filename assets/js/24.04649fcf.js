(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{240:function(t,n,s){"use strict";s.r(n);var e=s(0),a=Object(e.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"简单的一个vuestore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单的一个vuestore"}},[this._v("#")]),this._v(" 简单的一个VueStore")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("\n// this.$store.dispatch\n// this.$store.commit('fn', '')\n// this.$store.state\n// const num = {\n//   state: {},\n//   mutations: {\n//     add: (state, num) => {\n//       state.num = num\n//     }\n//   },\n//   actions: {\n//     add({ commit, state }, a) {}\n//   }\n// }\n\n// new Vuex.Store({\n//   state: {}\n// })\n\nlet Vue\n\nclass Store {\n  constructor (options) {\n    this.state = new Vue({\n      data: options.state\n    })\n    this.mutations = options.mutations || {}\n    this.actions = options.actions || {}\n  }\n\n  commit = (type, arg) => {\n    this.mutations[type](this.state, arg)\n  }\n\n  dispatch = (type, arg) => {\n    this.actions[type]({\n      commit: this.commit,\n      state: this.state\n    }, arg)\n  }\n}\n\nfunction install (_Vue) {\n  Vue = _Vue\n  // 执行install时混入mixin\n  Vue.mixin({\n    beforeCreate () {\n      if (this.$options.store) {\n        Vue.prototype.$store = this.$options.store\n      }\n    }\n  })\n}\n\nexport default { Store, install }\n\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);